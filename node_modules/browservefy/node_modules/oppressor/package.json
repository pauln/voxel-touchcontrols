{
  "name": "oppressor",
  "version": "0.0.1",
  "description": "streaming http compression response negotiator",
  "main": "index.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dependencies": {
    "through": "~0.1.4",
    "response-stream": "~0.0.0",
    "negotiator": "~0.2.5"
  },
  "devDependencies": {
    "tap": "~0.3.0"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/oppressor.git"
  },
  "homepage": "https://github.com/substack/oppressor",
  "keywords": [
    "gzip",
    "compress",
    "deflate",
    "http",
    "negotiator",
    "pipe",
    "stream",
    "request",
    "response"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# oppressor\n\nstreaming http compression response negotiator\n\n[![build status](https://secure.travis-ci.org/substack/oppressor.png)](http://travis-ci.org/substack/oppressor)\n\n# example\n\nYou can use plain old streams:\n\n``` js\nvar oppressor = require('oppressor');\nvar fs = require('fs');\nvar http = require('http');\n\nvar server = http.createServer(function (req, res) {\n    fs.createReadStream(__dirname + '/data.txt')\n        .pipe(oppressor(req))\n        .pipe(res)\n    ;\n});\nserver.listen(8000);\n```\n\nor you can use fancy streaming static file server modules like\n[filed](http://github.com/mikeal/filed) that set handy things like etag,\nlast-modified, and content-type headers for you:\n\n(For now you'll need to use [my fork](https://github.com/substack/filed)\nuntil [this pull request](https://github.com/mikeal/filed/pull/25) gets merged.)\n\n``` js\nvar oppressor = require('oppressor');\nvar filed = require('filed');\nvar http = require('http');\n\nvar server = http.createServer(function (req, res) {\n     filed(__dirname + '/data.txt')\n        .pipe(oppressor(req))\n        .pipe(res)\n    ;\n});\nserver.listen(8000);\n```\n\n# methods\n\n``` js\nvar oppressor = require('oppressor')\n```\n\n## var stream = oppressor(req)\n\nReturn a [duplex stream](https://github.com/substack/stream-handbook#duplex)\nthat will be compressed with gzip, deflate, or no compression depending on the\naccept-encoding headers sent.\n\noppressor will emulate calls to http.ServerResponse methods like `writeHead()`\nso that modules like [filed](http://github.com/mikeal/filed) that expect to be\npiped directly to the response object will work.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install oppressor\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "_id": "oppressor@0.0.1",
  "_from": "oppressor@0.0.1"
}
